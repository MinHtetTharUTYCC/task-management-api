// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id       String   @id @default(uuid())
  username String   @unique
  email    String   @unique
  password String
  role     UserRole @default(MEMBER)

  createdAt DateTime @default(now())

  projectsOwned         Project[]       @relation("ProjectOwner")
  projectsParticipating ProjectMember[]

  tasksCreated  Task[] @relation("TaskCreator")
  tasksAssinged Task[] @relation("TaskAssignee")
}

model Project {
  id          String  @id @default(uuid())
  name        String
  description String?

  owner   User   @relation("ProjectOwner", fields: [ownerId], references: [id])
  ownerId String

  members ProjectMember[]
  tasks   Task[]

  createdAt DateTime @default(now())

  @@index([id, ownerId])
}

model ProjectMember {
  id String @id @default(uuid())

  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  joinedAt DateTime @default(now())
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String?
  status      TaskStatus @default(OPEN)

  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  creator   User   @relation("TaskCreator", fields: [creatorId], references: [id])
  creatorId String

  assignee   User   @relation("TaskAssignee", fields: [assigneeId], references: [id])
  assigneeId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  ADMIN
  MANAGER
  MEMBER
}

enum TaskStatus {
  OPEN
  IN_PROGRESS
  DONE
}
